---
description: Analyze current task stage and jump to corresponding workflow
alwaysApply: false
---
# Workflow Quick Reference

## 🚀 Process Selection Decision Tree

```
User proposes new requirement/task
├─ Is workspace in template state?
│  ├─ Yes → Use Process 1: Task Initialization
│  └─ No → Execute Process 3 archiving first, then execute Process 1
│
├─ Is task in progress?
│  └─ Yes → Use Process 2: Task Execution
│
├─ Is task basically completed OR workspace too messy OR important experience?
│  └─ Yes → Use Process 3: Task Archiving
│
└─ Uncertain → Ask user intent, use mcp-feedback-enhanced
```

## 📋 Key Feedback Timings

### 🔴 Must Feedback (Every time)
- **Process 1**: Requirement confirmation, task setup
- **Process 2**: Start new step, encounter problems, plan adjustments
- **Process 3**: Archiving decisions, important task transfers, workspace reset

### 🟡 Conditional Feedback (When conditions met)
- **Process 1**: Major technical decisions, multiple solution choices
- **Process 2**: Important milestones, over 50% timeout
- **Process 3**: Important feature archiving, many unfinished tasks

## 🛠️ Common Command Quick Reference

### Workspace Status Check
```bash
# Should only have 3 files, content in template format
ls docs/workspace/
# Check if content contains placeholders like [任务名称], [日期], etc.
```

### Workspace Reset
```batch
del docs\workspace\*.md
copy docs\workspace-template\*.md docs\workspace\
ren docs\workspace\scratchpad-template.md scratchpad.md
ren docs\workspace\todo-template.md todo.md
ren docs\workspace\experience-template.md experience.md
```

### Create New Archive
```batch
# First check docs/archives/README.md to determine next number
mkdir "docs\archives\[编号]-[功能名称]"
```

## 📝 Document Template Quick Reference

### scratchpad.md Task Setup
```markdown
### [Specific Feature Name] - [Start Date]
**Goal**: [Clear goal description]
**Status**: In Progress

#### Planned Steps
[ ] 1. [Specific step 1]
    - Expected Result: [Description]
    - Risk Assessment: [Risk points]
```

### Problem Recording Format
```markdown
### [Problem Title] - [Discovery Date]
**Problem Description**: [Detailed description]
**Cause Analysis**: [Root cause]
**Solution**: [Adopted solution method]
**Experience Summary**: [Pitfall avoidance points]
```

### mcp-feedback-enhanced Call
```typescript
await mcp_feedback_enhanced({
  summary: "[Concise summary explaining current status and content needing confirmation]",
  project_directory: "."
})
```

## ✅ Quality Check List

### Process 1 Completion Check
- [ ] workspace contains specific tasks (not template)
- [ ] Technical solutions confirmed by user
- [ ] At least 2 feedback sessions completed

### Process 2 Execution Check
- [ ] Each step status is clear
- [ ] Important discoveries recorded
- [ ] Problems and solutions complete

### Process 3 Archiving Check
- [ ] archives contain complete documentation
- [ ] Important tasks transferred
- [ ] workspace restored to template state

## 🚨 Common Problem Quick Solutions

### workspace Status Confusion
**Problem**: Uncertain whether to archive
**Solution**: Assess 4 questions → Feedback decision → Execute corresponding process

### Unclear Task Scope
**Problem**: Don't know what to do
**Solution**: Immediate feedback to seek clarification → Don't continue based on assumptions

### Multiple Technical Solution Choices
**Problem**: Don't know which to choose
**Solution**: List pros and cons of solutions → Feedback for user selection

### Encounter Blocking Problems
**Problem**: Cannot continue execution
**Solution**: Analyze cause → Provide solutions → Feedback for guidance

## 🎯 Success Elements

### Communication Aspects
- **Active Feedback** - Don't wait for user questions
- **Clear Description** - Avoid vague expressions
- **Provide Options** - Give specific solution options

### Recording Aspects
- **Real-time Updates** - Record progress immediately
- **Clear Classification** - Separate problems, discoveries, tasks
- **Easy to Find** - Use clear titles and formats

### Execution Aspects
- **Follow Processes** - Don't skip key steps
- **Quality Assurance** - Each stage has check standards
- **Continuous Improvement** - Summarize experience to optimize processes

---

**Remember**: The purpose of workflows is to improve efficiency and quality, not add burden. Use flexibly, focus on communication and recording.
